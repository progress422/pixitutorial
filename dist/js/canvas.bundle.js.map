{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.js"],"names":["canvas","ctx","w","h","cameraPos","fixedDeltaTime","maxSubSteps","world","characterBody","player","SCENERY_GROUP","PLAYER_GROUP","Application","PIXI","loader","resources","Sprite","TextureCache","utils","Rectangle","app","width","height","resolution","zoom","stage","scale","y","tilemap","playerView","add","parseTileMap","document","body","appendChild","view","init","setBackground","getElementById","getContext","lineWidth","p2","World","draw","setPlayer","addWalls","characterShape","Box","collisionGroup","Body","mass","position","fixedRotation","damping","type","KINEMATIC","addShape","addBody","KinematicCharacterController","collisionMask","velocityXSmoothing","timeToJumpApex","skinWidth","moveSpeed","gravity","maxJumpVelocity","minJumpVelocity","console","log","on","update","lastTimeStep","left","right","window","addEventListener","evt","keyCode","setJumpKeyState","input","requestAnimationFrame","animate","texture","addChild","bg","addStaticPolygon","x","vertices","shape","Convex","addStaticBox","horizontalTop","Plane","horizontalBottom","verticalLeft","angle","Math","PI","verticalRight","renderer","screen","drawBody","interpolatedPosition","s","shapes","save","translate","rotate","interpolatedAngle","fillRect","Circle","beginPath","arc","radius","fill","closePath","moveTo","i","length","lineTo","restore","render","fillStyle","vec2","lerp","strokeStyle","bodies","lastTime","time","deltaTime","min","step","tilemapSource","fetch","then","res","json","data","rows","cols","tileWidth","tilewidth","tileHeight","tileheight","tilemapPrefix","collisions","layers","map","layer","tilesets","tileset","firstgid","tiles","loadTiles","tileImagesArr","pathToImages","tileStartId","tile","tileId","id","objectgroup","objects","collision","polygon","undefined","polygonArray","point","polygonArr","image","imageheight","imagewidth","img","alias","src","load","rowNumber","index","tileX","tileY","setTileOnMap","setCollisions","set","collisionData","collisionX","collisionY","ellipse"],"mappings":"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","file":"./js/canvas.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","var canvas;\nvar ctx;\nvar w, h;\nvar cameraPos = [0, 0];\nvar fixedDeltaTime = 1 / 60;\nvar maxSubSteps = 10;\nvar world;\nvar characterBody;\nvar player;\n\n// Collision groups\nvar SCENERY_GROUP = 0x01;\nvar PLAYER_GROUP = 0x02;\n\nconst Application = PIXI.Application,\n    loader = PIXI.loader,\n    resources = PIXI.loader.resources,\n    Sprite = PIXI.Sprite,\n    TextureCache = PIXI.utils.TextureCache,\n    Rectangle = PIXI.Rectangle;\n\nconst app = new Application({\n    width: 1920,\n    height: 1024,\n    resolution: 0.7\n});\n\nconst zoom = 1;\n\n// app.stage.scale.x = zoom;\napp.stage.scale.y = -1;\n\nconst tilemap = {};\nlet playerView;\n\n// laod background\nloader.add('background', '/img/teamfun/Background2.png')\n.add('player', '/img/teamfun/player.png');\n\nparseTileMap('/img/teamfun/tilemapjsontestcsv.json');\n\ndocument.body.appendChild(app.view);\n\nfunction init() {\n    setBackground();\n    \n    \n    // Init canvas\n    canvas = document.getElementById(\"myCanvas\");\n    w = canvas.width;\n    h = canvas.height;\n    ctx = canvas.getContext(\"2d\");\n    ctx.lineWidth = 1 / zoom;\n    \n    // Init world\n    world = new p2.World();\n    \n    tilemap.draw();\n    setPlayer();\n\n    // Add some scenery\n    // addStaticBox(0, -800, 500, 5);\n    // addStaticBox(0, -980, 100, 1);\n    // addStaticPolygon(0,-400, [[0,3], [0,1], [2,2]]);\n    addWalls();\n    \n    \n    // Add a character body\n    var characterShape = new p2.Box({\n        width: 78,\n        height: 78,\n        collisionGroup: PLAYER_GROUP\n    });\n    characterBody = new p2.Body({\n        mass: 0,\n        position: [60, -600],\n        fixedRotation: true,\n        damping: 0,\n        type: p2.Body.KINEMATIC\n    });\n    characterBody.addShape(characterShape);\n    world.addBody(characterBody);\n\n    // Create the character controller\n    player = new p2.KinematicCharacterController({\n        world: world,\n        body: characterBody,\n        collisionMask: SCENERY_GROUP,\n        velocityXSmoothing: 0.0001,\n        timeToJumpApex: 0.4,\n        skinWidth: 0.1,\n        moveSpeed: 300\n    });\n\n    player.gravity = -800;\n    player.maxJumpVelocity = 500;\n    player.minJumpVelocity = 400;\n    console.log(player);\n    \n\n    // Update the character controller after each physics tick.\n    world.on('postStep', function () {\n        player.update(world.lastTimeStep);\n    });\n\n    // Set up key listeners\n    var left = 0, right = 0;\n    window.addEventListener('keydown', function (evt) {\n        switch (evt.keyCode) {\n            case 38: // up key\n            case 32: player.setJumpKeyState(true); break; // space key\n            case 39: right = 1; break; // right key\n            case 37: left = 1; break; // left key\n        }\n        player.input[0] = right - left;\n    });\n    window.addEventListener('keyup', function (evt) {\n        switch (evt.keyCode) {\n            case 38: // up\n            case 32: player.setJumpKeyState(false); break;\n            case 39: right = 0; break;\n            case 37: left = 0; break;\n        }\n        player.input[0] = right - left;\n    });\n\n    requestAnimationFrame(animate);\n}\n\nfunction setPlayer() {\n    playerView = new PIXI.Sprite(\n        PIXI.loader.resources['player'].texture\n    );\n    // playerView.position.set(350,-500);\n\n    playerView.scale.y = -1;\n\n    app.stage.addChild(playerView);\n}\n\nfunction setBackground() {\n    let bg = new PIXI.Sprite(\n        PIXI.loader.resources['background'].texture\n    );\n    app.stage.addChild(bg);\n}\n\nfunction addStaticPolygon(x, y, vertices) {\n    console.log(vertices);    \n    var shape = new p2.Convex({\n        collisionGroup: SCENERY_GROUP,\n        vertices\n    });\n    var body = new p2.Body({\n        position: [x, y]\n    });\n    body.addShape(shape);\n    world.addBody(body);\n}\n\nfunction addStaticBox(x, y, width, height) {\n    var shape = new p2.Box({\n        collisionGroup: SCENERY_GROUP,\n        width: width,\n        height: height\n    });\n    var body = new p2.Body({\n        position: [x, y]\n    });\n    body.addShape(shape);\n    world.addBody(body);\n}\n\nfunction addWalls(){\n    let horizontalTop = new p2.Body();\n    horizontalTop.addShape(new p2.Plane());\n    world.addBody(horizontalTop);\n\n    let horizontalBottom = new p2.Body();\n    horizontalBottom.addShape(new p2.Plane());\n    horizontalBottom.position = [0,-970];\n    // horizontalBottom.position = [0,-app.renderer.screen.height]\n    world.addBody(horizontalBottom);\n    \n\n    let verticalLeft = new p2.Body({angle: Math.PI / 2});\n    verticalLeft.addShape(new p2.Plane({collisionGroup: SCENERY_GROUP}));\n    world.addBody(verticalLeft);\n    \n    let verticalRight = new p2.Body({angle: Math.PI / 2});\n    verticalRight.addShape(new p2.Plane({collisionGroup: SCENERY_GROUP}));\n    verticalRight.position = [app.renderer.screen.width,0]\n    world.addBody(verticalRight);\n}\n\nfunction drawBody(body) {\n    var x = body.interpolatedPosition[0],\n        y = body.interpolatedPosition[1],\n        s = body.shapes[0];\n    ctx.save();\n    ctx.translate(x, y);     // Translate to the center of the box\n    ctx.rotate(body.interpolatedAngle);  // Rotate to the box body frame\n\n    if (s instanceof p2.Box) {\n        ctx.fillRect(-s.width / 2, -s.height / 2, s.width, s.height);\n    } else if (s instanceof p2.Circle) {\n        ctx.beginPath();\n        ctx.arc(0, 0, s.radius, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.closePath();\n    } else if (s instanceof p2.Convex) {\n        console.log('sssss',s);\n        \n        ctx.beginPath();\n        ctx.moveTo(s.vertices[0][0],s.vertices[0][1]);\n        for (let i = 1; i < s.vertices.length; i++) {\n            s.vertices[i];\n            ctx.lineTo(s.vertices[i][0],s.vertices[i][1]);\n        }\n        ctx.fill();\n        ctx.closePath();\n    }\n\n    ctx.restore();\n}\n\nfunction render() {\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, w, h);\n\n    // Transform the canvas\n    // Note that we need to flip the y axis since Canvas pixel coordinates\n    // goes from top to bottom, while physics does the opposite.\n    ctx.save();\n    ctx.translate(w / 2, h / 2);  // Translate to the center\n    ctx.scale(zoom, -zoom);   // Zoom in and flip y axis\n\n    p2.vec2.lerp(\n        cameraPos,\n        cameraPos,\n        [-characterBody.interpolatedPosition[0], -characterBody.interpolatedPosition[1]],\n        0.05\n    );\n    ctx.translate(\n        cameraPos[0],\n        cameraPos[1]\n    );\n\n    // Draw all bodies\n    ctx.strokeStyle = 'none';\n    ctx.fillStyle = 'red';\n    for (var i = 0; i < world.bodies.length; i++) {\n        var body = world.bodies[i];\n        drawBody(body);\n    }\n\n\n\n    // Restore transform\n    ctx.restore();\n}\n\nvar lastTime;\n\n// Animation loop\nfunction animate(time) {\n    playerView.x = characterBody.position[0];\n    playerView.y = characterBody.position[1];\n        \n    requestAnimationFrame(animate);\n\n    // Compute elapsed time since last frame\n    var deltaTime = lastTime ? (time - lastTime) / 1000 : 0;\n    deltaTime = Math.min(1 / 10, deltaTime);\n\n    // Move physics bodies forward in time\n    world.step(fixedDeltaTime, deltaTime, maxSubSteps);\n\n    // Render scene\n    render();\n\n    lastTime = time;\n}\n\nfunction parseTileMap(tilemapSource){\n    fetch(tilemapSource)\n    .then(res => res.json())\n    .then(data => {\n        console.log('all json data',data);\n        console.log('------------------------------------');\n        \n        tilemap.rows = data.height;\n        tilemap.cols = data.width;\n        tilemap.tileWidth = data.tilewidth;\n        tilemap.tileHeight = data.tileheight;\n        tilemap.tilemapPrefix = 'tileimg';\n        tilemap.collisions = {};\n        tilemap.layers = data.layers.map((layer) => {\n            return {\n                data: layer.data\n            }\n        });\n        tilemap.tilesets = data.tilesets.map((tileset) => {\n            return {\n                firstgid: tileset.firstgid,\n                tiles: tileset.tiles\n            }\n        });\n        console.log('Tilemap',tilemap.tilesets);\n        console.log('------------------------------------');\n        tilemap.loadTiles();\n        console.log(tilemap.collisions);\n        \n    });\n    tilemap.loadTiles = function() {\n        let tileImagesArr = [];\n        let tilemapPrefix = tilemap.tilemapPrefix;\n        const pathToImages = '/img/teamfun/';\n        this.tilesets.map((tileset) => {\n            let tileStartId = tileset.firstgid;\n            tileImagesArr = [...tileImagesArr, ...tileset.tiles.map((tile) => {\n                let tileId = tile.id + tileStartId;\n\n                //collisions\n                if (tile.objectgroup){\n                    tile.objectgroup.objects.map((collision) => {\n                        tilemap.collisions[tileId] = collision;\n                        if (collision.polygon != undefined){\n                            let polygonArray = [];\n                            polygonArray = [...polygonArray,...collision.polygon.map((point) => {\n                                return [point.x, point.y];\n                            })];\n                            tilemap.collisions[tileId].polygonArr = polygonArray;\n                        }\n                        tilemap.collisions[tileId].image = {\n                            height: tile.imageheight,\n                            width: tile.imagewidth,\n                        };\n                    })\n                }\n                //tile images\n                return {\n                    'alias': tilemapPrefix + tileId,\n                    'src': tile.image\n                }\n            })]\n        });\n        console.log(tileImagesArr);\n        \n        // load images to pixi\n        tileImagesArr.map((img) => loader.add(img.alias, pathToImages + img.src));\n        loader.load(init);\n    }\n    tilemap.draw = function() {\n        let tileWidth = tilemap.tileWidth;\n        let tileHeight = tilemap.tileHeight;\n        let cols = tilemap.cols;\n        tilemap.layers.map((layer) => {\n            let rowNumber = 1;\n            layer.data.map((tile, index) => {\n                if (tile != 0) {\n                    let tileX = (index - cols*(rowNumber-1)) * tileWidth;\n                    let tileY = rowNumber * tileHeight;\n                    \n                    tilemap.setTileOnMap(tileX,tileY,`${tilemap.tilemapPrefix}${tile}`);\n                    tilemap.setCollisions(tileX,tileY,tile);\n                }\n                if ((index + 1)%cols == 0)\n                    rowNumber += 1;\n            });\n        });\n    }\n    tilemap.setTileOnMap = function(x,y,alias) {\n        let tile = new PIXI.Sprite(\n            PIXI.loader.resources[alias].texture\n        );\n        tile.position.set(x,-(y-tile.height));\n        tile.scale.y = -1;\n        app.stage.addChild(tile);\n    }\n    tilemap.setCollisions = function(x,y,id) {\n        let collisionData = tilemap.collisions[id];\n        if (collisionData){\n            let collisionX = x + collisionData.x;\n            let collisionY = y - collisionData.image.height + collisionData.y;\n            if (collisionData.polygon != undefined){\n                console.log('polygon',collisionData);                \n                addStaticPolygon(collisionX,-collisionY, collisionData.polygonArr);\n            } else if (collisionData.ellipse != undefined) {\n                // console.log('ellipse', collisionData);\n                \n            } else {\n                // rectangle collision\n                // console.log('rectangle',collisionData);\n                addStaticBox(collisionX, -collisionY, collisionData.width, collisionData.height);\n            }\n\n        }\n    }\n}"],"sourceRoot":""}